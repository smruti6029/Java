package com.checkresult;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.List;

import javax.persistence.criteria.CriteriaBuilder.In;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

import com.DAO_FOR_MCQ.AnswerTable;
import com.DAO_FOR_MCQ.UserQuestionAnswerById;
import com.mcq.entity.QuestionWithAnswer;
import com.mcq.entity.User_Input_Answer;
import com.mcq.entity.UsersInputClass;

public class CheckResultWIthId {

	public static void checkResultById() throws NumberFormatException, IOException 
	
	
	{
		Configuration conf=new Configuration();
		conf.configure("hibernate.cfg.xml");
		conf.setProperty("hibernate.show_sql", "false");
		SessionFactory factory = conf.buildSessionFactory();	
		Session session=factory.openSession();
		
		
		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
		System.out.println("Enter User Id");
		int user_id=Integer.parseInt(bf.readLine());
		 
		UsersInputClass user=session.get(UsersInputClass.class, user_id);
		
		
		 List<User_Input_Answer> userquestionanswer = UserQuestionAnswerById.getQuestionanswer();
		 List<QuestionWithAnswer> RightAnswer=AnswerTable.answerTable();
		 
		 System.out.println(user.getName());
		 Integer marks = 0;
		 //
		 for (QuestionWithAnswer orginalAnswer : RightAnswer) {
		 //
		 	for (User_Input_Answer userAnswer : userquestionanswer) {
		 		if (userAnswer.getUser().getId() == userId) {
//		 			if (userAnswer.getQuestion().getId() == orginalAnswer.getQuestion().getId()) {
//		 				if (userAnswer.getOption().getId() == orginalAnswer.getOption().getId()) {
//		 					marks++;
//		 				}
//		 			}
//		 		}
//		 	}

		 
		 
		 
		 	
		
		
		
	}

}

//User user = session.get(User.class, userId);
//
//String userAnswerQuery = "From UserInputAnswer";
//List<UserInputAnswer> userAnswerList = session.createQuery(userAnswerQuery, UserInputAnswer.class)
//		.getResultList();
//
//String orginalAnswerQuery = "From QuestionAnswersMapping";
//List<QuestionAnswersMapping> orginalAnswerList = session
//		.createQuery(orginalAnswerQuery, QuestionAnswersMapping.class).getResultList();
//
//Integer marks = 0;
//
//for (QuestionAnswersMapping orginalAnswer : orginalAnswerList) {
//
//	for (UserInputAnswer userAnswer : userAnswerList) {
//		if (userAnswer.getUser().getId() == userId) {
//			if (userAnswer.getQuestion().getId() == orginalAnswer.getQuestion().getId()) {
//				if (userAnswer.getOption().getId() == orginalAnswer.getOption().getId()) {
//					marks++;
//				}
//			}
//		}
//	}
//}
